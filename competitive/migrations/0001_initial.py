# Generated by Django 2.0.7 on 2019-06-28 22:21

import competitive.models
from decimal import Decimal
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('authentication', '0001_initial'),
        ('problem', '__first__'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('contest', '__first__'),
    ]

    operations = [
        migrations.CreateModel(
            name='Language',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, unique=True)),
                ('compile_command', models.CharField(help_text='<\x0cfile_name.extension> and <<\x0cfile_name>> use @ to represent file_name with extension and # with out extension', max_length=300)),
                ('run_command', models.CharField(help_text='<\x0cfile_name.extension> and <<\x0cfile_name>> use @ to represent file_name with extension and # with out extension', max_length=300)),
                ('extension', models.CharField(blank=True, max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Rankcache_team_jury',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('point', models.DecimalField(decimal_places=2, default=0.0, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('punish_time', models.PositiveIntegerField(default=0)),
                ('contest', models.ForeignKey(limit_choices_to={'enable': True}, on_delete=django.db.models.deletion.CASCADE, to='contest.Contest')),
                ('team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='authentication.Team')),
            ],
        ),
        migrations.CreateModel(
            name='Rankcache_team_public',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('point', models.DecimalField(decimal_places=2, default=0.0, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('punish_time', models.PositiveIntegerField(default=0)),
                ('contest', models.ForeignKey(limit_choices_to={'enable': True}, on_delete=django.db.models.deletion.CASCADE, to='contest.Contest')),
                ('team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='authentication.Team')),
            ],
        ),
        migrations.CreateModel(
            name='Rankcache_user_jury',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('point', models.DecimalField(decimal_places=2, default=0.0, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('punish_time', models.PositiveIntegerField(default=0)),
                ('contest', models.ForeignKey(limit_choices_to={'enable': True}, on_delete=django.db.models.deletion.CASCADE, to='contest.Contest')),
                ('user', models.ForeignKey(limit_choices_to={'role__role': 'Team Member'}, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Rankcache_user_public',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('point', models.DecimalField(decimal_places=2, default=0.0, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('punish_time', models.PositiveIntegerField(default=0)),
                ('contest', models.ForeignKey(limit_choices_to={'enable': True}, on_delete=django.db.models.deletion.CASCADE, to='contest.Contest')),
                ('user', models.ForeignKey(limit_choices_to={'role__role': 'Team Member'}, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Scorecache_team_jury',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('submission', models.PositiveSmallIntegerField(default=0)),
                ('punish', models.PositiveSmallIntegerField(default=0)),
                ('pending', models.PositiveSmallIntegerField(default=0)),
                ('correct_submit_time', models.DateTimeField(blank=True, null=True)),
                ('is_correct', models.BooleanField(default=False)),
                ('problem', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='problem.Problem')),
                ('rank_cache', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='competitive.Rankcache_team_jury')),
            ],
        ),
        migrations.CreateModel(
            name='Scorecache_team_public',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('submission', models.PositiveSmallIntegerField(default=0)),
                ('punish', models.PositiveSmallIntegerField(default=0)),
                ('pending', models.PositiveSmallIntegerField(default=0)),
                ('correct_submit_time', models.DateTimeField(blank=True, null=True)),
                ('is_correct', models.BooleanField(default=False)),
                ('problem', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='problem.Problem')),
                ('rank_cache', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='competitive.Rankcache_team_public')),
            ],
        ),
        migrations.CreateModel(
            name='Scorecache_user_jury',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('submission', models.PositiveSmallIntegerField(default=0)),
                ('punish', models.PositiveSmallIntegerField(default=0)),
                ('pending', models.PositiveSmallIntegerField(default=0)),
                ('correct_submit_time', models.DateTimeField(blank=True, null=True)),
                ('is_correct', models.BooleanField(default=False)),
                ('problem', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='problem.Problem')),
                ('rank_cache', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='competitive.Rankcache_user_jury')),
            ],
        ),
        migrations.CreateModel(
            name='Scorecache_user_public',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('submission', models.PositiveSmallIntegerField(default=0)),
                ('punish', models.PositiveSmallIntegerField(default=0)),
                ('pending', models.PositiveSmallIntegerField(default=0)),
                ('correct_submit_time', models.DateTimeField(blank=True, null=True)),
                ('is_correct', models.BooleanField(default=False)),
                ('problem', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='problem.Problem')),
                ('rank_cache', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='competitive.Rankcache_user_public')),
            ],
        ),
        migrations.CreateModel(
            name='Submit',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('submit_file', models.FileField(upload_to=competitive.models.submit_file_directory_upload)),
                ('result', models.CharField(choices=[('Correct', 'Correct'), ('Time Limit Exceeded', 'Time Limit Exceeded'), ('Wrong Answer', 'Wrong Answer'), ('Compiler Error', 'Compiler Error'), ('Memory Limit Exceeded', 'Memory Limit Exceeded'), ('Run Time Error', 'Run Time Error'), ('No Output', 'No Output')], max_length=200)),
                ('score', models.IntegerField(default=0)),
                ('submit_time', models.DateTimeField()),
                ('contest', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contest.Contest')),
                ('language', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='competitive.Language')),
                ('problem', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='problem.Problem')),
                ('team', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='authentication.Team')),
                ('user', models.ForeignKey(limit_choices_to={'role__role': 'Team Member'}, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Testcase_Output',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('output_file', models.FileField(upload_to=competitive.models.testcase_output_directory_upload)),
                ('result', models.CharField(choices=[('Correct', 'Correct'), ('Time Limit Exceeded', 'Time Limit Exceeded'), ('Wrong Answer', 'Wrong Answer'), ('Compiler Error', 'Compiler Error'), ('Memory Limit Exceeded', 'Memory Limit Exceeded'), ('Run Time Error', 'Run Time Error'), ('No Output', 'No Output')], max_length=200)),
                ('execution_time', models.DecimalField(decimal_places=8, default=0.0, max_digits=12, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('submit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='competitive.Submit')),
                ('test_case', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='problem.TestCase')),
            ],
        ),
        migrations.AlterUniqueTogether(
            name='testcase_output',
            unique_together={('test_case', 'output_file')},
        ),
        migrations.AlterUniqueTogether(
            name='scorecache_user_public',
            unique_together={('rank_cache', 'problem')},
        ),
        migrations.AlterUniqueTogether(
            name='scorecache_user_jury',
            unique_together={('rank_cache', 'problem')},
        ),
        migrations.AlterUniqueTogether(
            name='scorecache_team_public',
            unique_together={('rank_cache', 'problem')},
        ),
        migrations.AlterUniqueTogether(
            name='scorecache_team_jury',
            unique_together={('rank_cache', 'problem')},
        ),
        migrations.AlterUniqueTogether(
            name='rankcache_user_public',
            unique_together={('contest', 'user')},
        ),
        migrations.AlterUniqueTogether(
            name='rankcache_user_jury',
            unique_together={('contest', 'user')},
        ),
        migrations.AlterUniqueTogether(
            name='rankcache_team_public',
            unique_together={('contest', 'team')},
        ),
        migrations.AlterUniqueTogether(
            name='rankcache_team_jury',
            unique_together={('contest', 'team')},
        ),
    ]
